; ***  Example PlatformIO Project Configuration Override File   ***
; ***  Changes done here override settings in platformio.ini    ***
;
; *****************************************************************
; ***  to activate rename this file to platformio_override.ini  ***
; *****************************************************************
;
; Please visit documentation for the options and examples
; http://docs.platformio.org/en/stable/projectconf.html

; default offload for plugs with 1M esp8266
[env:tasmota-offload]
build_flags             = ${common.build_flags} -DUSE_OFFLOAD_WEB
board_build.f_cpu       = 160000000L

; offload with 64k LittleFS partition for plugs with 1M esp8266
[env:tasmota-offload-1m64k]
build_flags             = ${common.build_flags} -DBUILD_1M64K -DUSE_OFFLOAD_WEB -DUSE_UFILESYS -DGUI_EDIT_FILE -DGUI_TRASH_FILE
board                   = esp8266_1M
board_build.ldscript    = eagle.flash.1m64.ld
board_build.filesystem  = littlefs
board_build.f_cpu       = 160000000L

; offload with 64k LittleFS partition for plugs with 1M esp8266 (avoid as you'll have to go thru tasmota-mini)
[env:tasmota-offload-1m128k]
build_flags             = ${common.build_flags} -DBUILD_1M128K -DUSE_OFFLOAD_WEB -DUSE_UFILESYS -DGUI_EDIT_FILE -DGUI_TRASH_FILE
board                   = esp8266_1M
board_build.ldscript    = eagle.flash.1m128.ld
board_build.filesystem  = littlefs
board_build.f_cpu       = 160000000L

; offload with 1mb LittleFS partition for plugs with 2mb esp8266
[env:tasmota-offload-2m1m]
build_flags             = ${common.build_flags} -DBUILD_2M1M -DUSE_OFFLOAD_WEB
board                   = esp8266_2M1M
board_build.ldscript    = eagle.flash.2m1m.ld
board_build.filesystem  = littlefs
board_build.f_cpu       = 160000000L

; offload with 2mb LittleFS partition for devices with 4mb esp8266 (wemos mini, ...)
[env:tasmota-offload-4m2m]
build_flags             = ${common.build_flags} -DBUILD_4M2M -DUSE_OFFLOAD_WEB 
board                   = esp8266_4M2M
board_build.ldscript    = eagle.flash.4m2m.ld
board_build.filesystem  = littlefs
board_build.f_cpu       = 160000000L

; default french pilotwire for devices with 1M esp8266 (sonoff basic, ...)
[env:tasmota-pilotwire]
build_flags             = ${common.build_flags} -DUSE_PILOTWIRE
board_build.f_cpu       = 160000000L

; french pilotwire with 64k LittleFS partition for devices with 1mb esp8266 (sonoff basic, ...)
[env:tasmota-pilotwire-1m64k]
build_flags             = ${common.build_flags} -DBUILD_1M64K -DUSE_PILOTWIRE -DUSE_UFILESYS -DGUI_EDIT_FILE -DGUI_TRASH_FILE 
board                   = esp8266_1M
board_build.ldscript    = eagle.flash.1m64.ld
board_build.filesystem  = littlefs
board_build.f_cpu       = 160000000L

; french pilotwire with 1mb LittleFS partition for plugs with 2mb esp8266
[env:tasmota-pilotwire-2m1m]
build_flags             = ${common.build_flags} -DBUILD_2M1M -DUSE_PILOTWIRE
board                   = esp8266_2M1M
board_build.ldscript    = eagle.flash.2m1m.ld
board_build.filesystem  = littlefs
board_build.f_cpu       = 160000000L

; french pilotwire with 2mb LittleFS partition for devices with 4mb esp8266 (wemos mini, ...)
[env:tasmota-pilotwire-4m2m]
build_flags             = ${common.build_flags} -DBUILD_4M2M -DUSE_PILOTWIRE 
board                   = esp8266_4M2M
board_build.ldscript    = eagle.flash.4m2m.ld
board_build.filesystem  = littlefs
board_build.f_cpu       = 160000000L

[env:tasmota32-pilotwire]
extends                 = env:tasmota32_base 
build_flags             = ${esp32_defaults.build_flags} -DBUILD_ESP32 -DUSE_PILOTWIRE
board                   = esp32_4M_FS
board_build.filesystem  = littlefs
board_build.f_cpu       = 240000000L

[env:tasmota32s2-pilotwire] 
extends                 = env:tasmota32s2
build_flags             = ${env:tasmota32_base.build_flags} -DBUILD_ESP32S2 -DUSE_PILOTWIRE
board                   = esp32s2
board_build.filesystem  = littlefs

[platformio]
; For best Gitpod performance remove the ";" in the next line. Needed Platformio files are cached and installed at first run
;core_dir = .platformio
; For unrelated compile errors with Windows it can help to shorten Platformio project path
;workspace_dir = c:\.pio
;extra_configs           = platformio_tasmota_user_env.ini

; *** Build/upload environment
default_envs            =
; *** Uncomment the line(s) below to select version(s)
                           tasmota-offload
                           tasmota-offload-1m64k
                           tasmota-offload-1m128k
                           tasmota-offload-2m1m
                           tasmota-offload-4m2m
                           tasmota-pilotwire
                           tasmota-pilotwire-1m64k
                           tasmota-pilotwire-2m1m
                           tasmota-pilotwire-4m2m
                           tasmota32-pilotwire
                           tasmota32s2-pilotwire

;                          tasmota
;                          tasmota-debug
;                          tasmota-minimal
;                          tasmota-lite
;                          tasmota-knx
;                          tasmota-sensors
;                          tasmota-display
;                          tasmota-zbbridge
;                          tasmota-ir
;                          tasmota32
;                          tasmota32-zbbrdgpro
;                          tasmota32-bluetooth
;                          tasmota32-webcam
;                          tasmota32-knx
;                          tasmota32-lvgl
;                          tasmota32-ir
;                          tasmota32solo1
;                          tasmota32c3
;                          tasmota32c3cdc
;                          tasmota32s2
;                          tasmota32s2cdc
;                          tasmota32s3
;                          tasmota32s3cdc
;                          tasmota32-odroidgo
;                          tasmota32-core2
;                          tasmota32-nspanel


[env]
;build_unflags           = ${common.build_unflags}
;                          -Wswitch-unreachable
;build_flags             = ${common.build_flags}
;                          -DF_CRYSTAL=26000000
;                          -Wno-switch-unreachable
; *** Optional Debug messages
;                         -DDEBUG_TASMOTA_CORE
;                         -DDEBUG_TASMOTA_DRIVER
;                         -DDEBUG_TASMOTA_SENSOR
; Build variant 1MB = 1MB firmware no filesystem (default)
;board                   = ${common.board}
; Build variant 2MB = 1MB firmware, 1MB filesystem (most Shelly devices)
;board                   = esp8266_2M1M
; Build variant 4MB = 1MB firmware, 1MB OTA, 2MB filesystem (WEMOS D1 Mini, NodeMCU, Sonoff POW)
;board                   = esp8266_4M2M
;board_build.f_cpu       = 160000000L
;board_build.f_flash     = 40000000L
; *** Define serial port used for erasing/flashing/terminal
;upload_port             = COM4
;monitor_port            = COM4
lib_ignore              =
                          Servo(esp8266)
                          ESP8266AVRISP
                          ESP8266LLMNR
                          ESP8266NetBIOS
                          ESP8266SSDP
                          SP8266WiFiMesh
                          Ethernet(esp8266)
                          GDBStub
                          TFT_Touch_Shield_V2
                          ESP8266HTTPUpdateServer
                          ESP8266WiFiMesh
                          EspSoftwareSerial
                          SPISlave
                          Hash
; Disable next if you want to use ArduinoOTA in Tasmota (default disabled)
                          ArduinoOTA
lib_extra_dirs          = ${library.lib_extra_dirs}


[env:tasmota32_base]
; *** Uncomment next lines ";" to enable development Tasmota Arduino version ESP32
;platform                = https://github.com/tasmota/platform-espressif32.git
;platform_packages       = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/1271/framework-arduinoespressif32-lwip_timeout-ed6742e7f0.zip
;                          framework-arduino-solo1 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/1273/framework-arduinoespressif32-solo1-release_v4.4-804d12ce82.zip
;                          framework-arduino-ITEAD @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/1272/framework-arduinoespressif32-ITEAD-release_v4.4-804d12ce82.zip
;build_unflags           = ${esp32_defaults.build_unflags}
;build_flags             = ${esp32_defaults.build_flags}
;board                   = esp32
;board_build.f_cpu       = 240000000L
;board_build.f_flash     = 40000000L
;board_build.flash_mode  = qio
;board_build.flash_size  = 8MB
;board_upload.maximum_size = 8388608
;board_upload.arduino.flash_extra_images =
;board_build.partitions  = partitions/esp32_partition_app2944k_fs2M.csv
; *** Serial port used for erasing/flashing the ESP32
;upload_port             = COM4
;monitor_port            = COM4
;upload_speed            = 115200
monitor_speed           = 115200
upload_resetmethod      = ${common.upload_resetmethod}
lib_ignore              =
                          HTTPUpdateServer
                          ESP RainMaker
                          WiFiProv
                          USB
                          SPIFFS
                          ESP32 Azure IoT Arduino
                          ESP32 Async UDP
                          ESP32 BLE Arduino
;                          SimpleBLE
                          NetBIOS
                          ESP32
                          Preferences
                          BluetoothSerial
; Disable next if you want to use ArduinoOTA in Tasmota32 (default disabled)
                          ArduinoOTA

lib_extra_dirs           = ${library.lib_extra_dirs}
; *** ESP32 lib. ALWAYS needed for ESP32 !!!
                          lib/libesp32
; *** comment the following line if you dont use LVGL in a Tasmota32 build. Reduces compile time
;                          lib/libesp32_lvgl
; *** comment the following line if you dont use ESP32 Audio in a Tasmota32 build. Reduces compile time
;                          lib/libesp32_audio
; *** uncomment the following line if you use Bluetooth or Apple Homekit in a Tasmota32 build. Reduces compile time
;                          lib/libesp32_div
; *** uncomment the following line if you use Epaper driver epidy in your Tasmota32 build. Reduces compile time
;                          lib/libesp32_eink


[library]
shared_libdeps_dir      = lib
; *** Library disable / enable for variant Tasmota(32). Disable reduces compile time
; *** !!! Disabling needed libs will generate compile errors !!!
; *** The resulting firmware will NOT be different if you leave all libs enabled
; *** Disabling by putting a ";" in front of the lib name
; *** If you dont know what it is all about, do not change
lib_extra_dirs           =
; *** Only disabled for Tasmota minimal and Tasmota light. For all other variants needed!
                           lib/lib_basic
; **** I2C devices. Most sensors. Disable only if you dont have ANY I2C device enabled
                           lib/lib_i2c
; *** Displays. Disable if you dont have any Display activated
;                           lib/lib_display
; *** Bear SSL and base64. Disable if you dont have SSL or TLS activated
                           lib/lib_ssl
; *** Audio needs a lot of time to compile. Mostly not used functions. Recommended to disable
;                           lib/lib_audio
; *** RF 433 stuff (not RF Bridge). Recommended to disable
;                           lib/lib_rf
; *** Mostly not used functions. Recommended to disable
                           lib/lib_div
